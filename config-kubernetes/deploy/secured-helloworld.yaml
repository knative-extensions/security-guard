apiVersion: apps/v1
kind: Deployment
metadata:
  name: secured-helloworld
  namespace: default
  labels:
    app: secured-helloworld
spec:
  replicas: 1
  selector:
    matchLabels:
      app: secured-helloworld
  template:
    metadata:
      labels:
        app: secured-helloworld
    spec:
      volumes:
      - name: certificate-volume
        secret:
          secretName: default-serving-certs
          optional: true
      - name: guard-token-volume
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              audience: guard-service
              expirationSeconds: 3600
              path: guard-service
      serviceAccountName: guardian-reader
      containers:
      - env:
        - name: PORT
          value: "8080"
        image: gcr.io/knative-samples/helloworld-go
        imagePullPolicy: IfNotPresent
        name: helloworld
        ports:
        - containerPort: 8080
          name: user-port
          protocol: TCP
      - name: guard-rproxy
        image: ko://knative.dev/security-guard/cmd/guard-rproxy
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 22000
        volumeMounts:
        - mountPath: /var/run/secrets/tokens
          name: guard-token-volume
          readOnly:  true
        - mountPath: /var/lib/knative/certs
          name: certificate-volume
          readOnly:  true
        env:
        - name: GUARD_URL
          value: "https://guard-service.knative-serving"
        - name: LOG_LEVEL
          value: "info"
        - name: SERVICE_NAME
          value: "secured-helloworld"
        - name: NAMESPACE
          value: "default"
        - name: SERVICE_URL
          value: "http://127.0.0.1:8080"
        - name: USE_CRD
          value: "true"
        - name: MONITOR_POD
          value: "true"
        - name: GUARDIAN_SYNC_INTERVAL
          value: "60s"
---
apiVersion: v1
kind: Service
metadata:
  name: secured-helloworld
spec:
  selector:
    app: secured-helloworld
  ports:
    - protocol: TCP
      port: 22000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: secured-helloworld
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: "/hello(/|$)(.*)"
        backend:
          service:
            name: secured-helloworld
            port:
              number: 22000
